{"version":3,"sources":["components/Spinner/Spinner.js","components/Error/error.gif","components/Error/Error.js","hooks/Http.hook.js","services/MarvelService.js","components/errorBoundary/ErrorBoundary.js","components/pages/SinglePageLayout.js","components/pages/SingleComicPage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/findCharacter/findCharacter.js","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/appHeader/AppHeader.js","components/pages/SingleCharacterPage.js","components/pages/Page404.js","components/app/App.js","index.js"],"names":["Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","Error","src","ErrorImg","alt","useHttpHook","useState","loading","setLoading","error","setError","httpRequest","useCallback","url","a","method","headers","body","fetch","response","ok","json","message","cleanError","useMarvelService","_apikey","_dataURL","offset","chars","data","results","map","char","_transformCharacter","id","name","comics","comic","_transformComic","pathChar","description","slice","thumbnail","path","extension","urls","wiki","items","title","pageCount","language","textObjects","price","prices","getCharacter","getAllCharacters","getComic","getAllComics","getCharacterByName","ErrorBoundary","state","errorInfo","console","log","this","setState","props","children","Component","SinglePageLayout","dataType","prevProps","ComicSinglePage","HeroSinglePage","className","to","pages","SingleComicPage","comicId","useParams","setComic","useEffect","onComicsLoading","then","onComicLoaded","res","isLoading","isError","isContent","View","styleImg","objectFit","href","RandomChar","setChar","showChac","Math","floor","random","onCharLoaded","isChar","onClick","mjolnir","CharList","setChars","setOffset","isEnded","setIsEnded","firstLoad","setFirstLoad","itemRefs","defaultStyle","transition","opacity","transitionStyles","entering","entered","exiting","exited","onFocus","index","forEach","item","i","classList","contains","remove","add","onRequest","newChars","ended","indexOf","Transition","timeout","in","ref","el","tabIndex","selectId","onKeyDown","e","key","renderItems","disabled","Skeleton","comicsView","length","CharInfo","localStorage","getItem","JSON","parse","useRef","selectedId","updateChar","document","documentElement","scrollTop","setItem","stringify","isSkeleton","SearchForm","character","setCharacter","searched","setSearched","initialValues","validate","errors","onSubmit","catch","handleBlur","handleSubmit","handleChange","action","onBlur","onChange","placeholder","value","MainPage","setSelectedId","decoration","ComicsList","onComicsLoaded","com","renderComics","AppBanner","avengers","avengersLogo","ComicsPage","AppHeader","isActive","color","SingleCharacterPage","charName","onCharLoading","Page404","lazy","App","fallback","SwitchTransition","CSSTransition","classNames","unmountOnExit","element","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.8eaa0ccc.chunk.js","sourcesContent":["const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","export default __webpack_public_path__ + \"static/media/error.e07952f7.gif\";","import ErrorImg from \"./error.gif\"\r\n\r\nconst Error = () => {\r\n    return <img style={{\r\n        width: 320,\r\n        height: 180,\r\n        margin: \"0 auto\"\r\n    }} src={ErrorImg} alt=\"ERROR\" />\r\n}\r\n\r\nexport default Error","import { useState, useCallback } from \"react\";\r\n\r\nconst useHttpHook = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const httpRequest = useCallback(async (url, method = \"GET\", headers = {\"Content-type\": \"application/json\"}, body = null ) => {\r\n        setLoading(true);\r\n        try{\r\n            const response = await fetch(url, {method, headers, body});\r\n\r\n            if(!response.ok){\r\n                throw new Error(\"Couldn`t fetch!\");\r\n            }\r\n            setError(false);\r\n            setLoading(false);\r\n            return await response.json();\r\n        } catch(e){\r\n            setLoading(false)\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, [])\r\n\r\n    const cleanError = useCallback(() => setError(false), []);\r\n\r\n    return {loading, error, httpRequest, cleanError}\r\n\r\n}\r\nexport default useHttpHook;","import useHttpHook from \"../hooks/Http.hook\"\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const _apikey = \"50e5395a1a1e4e4347c98612859f811c\";\r\n    const _dataURL = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _OpeningOffset = 1;\r\n\r\n    const {httpRequest, loading, error, cleanError} = useHttpHook();\r\n\r\n\r\n    async function getAllCharacters(offset = _OpeningOffset){\r\n        const chars = await httpRequest(`${_dataURL}characters?limit=${9}&offset=${offset}&apikey=${_apikey}`);\r\n        return chars.data.results.map(char => _transformCharacter(char))\r\n    }\r\n\r\n    async function getCharacter(id) {\r\n        const char = await httpRequest(`${_dataURL}characters/${id}?apikey=${_apikey}`);\r\n        return _transformCharacter(char.data.results[0]);\r\n    }\r\n\r\n    async function getCharacterByName(name) {\r\n        const char = await httpRequest(`${_dataURL}characters?name=${name}&apikey=${_apikey}`);\r\n        return _transformCharacter(char.data.results[0]) ;\r\n    }\r\n\r\n    async function getAllComics(offset = _OpeningOffset){\r\n        const comics = await httpRequest(`${_dataURL}comics?limit=12&offset=${offset}&apikey=${_apikey}`);\r\n        return comics.data.results.map(comic => _transformComic(comic))\r\n    }\r\n\r\n    async function getComic(id){\r\n        const comic = await httpRequest(`${_dataURL}comics/${id}?apikey=${_apikey}`);\r\n        return _transformComic(comic.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        const pathChar = char;\r\n        return {\r\n            name: pathChar.name,\r\n            description: pathChar.description ? pathChar.description.slice(0,210) + '...' : \"There is no description for this character\",\r\n            thumbnail: pathChar.thumbnail.path + '.' + pathChar.thumbnail.extension,\r\n            urls: pathChar.urls[0].url,\r\n            wiki:  pathChar.urls[1].url,\r\n            comics: pathChar.comics.items,\r\n            id: pathChar.id,\r\n        }\r\n    }\r\n\r\n    const _transformComic = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.description ? comic.description:\"There is no description\",\r\n            pageCount: comic.pageCount ? `${comic.pageCount} p.` : \"No information about the number of pages\",\r\n            thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\r\n            language: comic.textObjects[0] ?  comic.textObjects[0].language : \"en-us\",\r\n            price: comic.prices[0].price ? comic.prices[0].price : 0\r\n        }\r\n    }\r\n\r\n    return {loading, error, cleanError, getCharacter, getAllCharacters, getComic, getAllComics, getCharacterByName};\r\n\r\n}\r\n\r\nexport default useMarvelService;","import { Component } from \"react\";\r\n\r\nimport Error from \"../Error/Error\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    \r\n    state = {\r\n        error: false\r\n    }\r\n    \r\n    componentDidCatch(error, errorInfo){\r\n        console.log(\"1)\" + error);\r\n        console.log(errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.error){\r\n            return <Error></Error>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst SinglePageLayout = ({dataType, prevProps}) => {\r\n\r\n    let type, url;\r\n\r\n    if(dataType === \"Comic\"){\r\n        type = <ComicSinglePage prevProps = {prevProps} />\r\n        url= \"/comics\";\r\n    } else if(dataType === \"Character\"){\r\n        type = <HeroSinglePage prevProps = {prevProps} />\r\n        url= \"/\";\r\n    } else {\r\n        url = \"/oops\";\r\n        type = \"error\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            {type}\r\n            <Link to = {url} className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst ComicSinglePage = ({prevProps:{thumbnail, title, description, pages, language, price}}) => {\r\n    console.log(\"200\")\r\n    return (\r\n        <>\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pages}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}$</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst HeroSinglePage = ({prevProps:{thumbnail, name, description}}) => {\r\n    return (\r\n        <>\r\n            <img src={thumbnail} alt={name} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{name}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {SinglePageLayout}","import { useParams, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport Spinner from '../Spinner/Spinner';\nimport Error from '../Error/Error';\nimport useMarvelService from '../../services/MarvelService';\nimport {SinglePageLayout} from './SinglePageLayout'\nimport './singleComic.scss';\n\nconst SingleComicPage = () => {\n\n    const {comicId} = useParams();\n    const {getComic, loading, error, cleanError} = useMarvelService();\n    const [comic, setComic] = useState(null);\n\n    useEffect(()=>{\n        onComicsLoading();\n    }, [])\n\n    const onComicsLoading = () => {\n        cleanError();\n        getComic(comicId)\n        .then(onComicLoaded)\n    }\n\n    const onComicLoaded = (res) => {\n        setComic(res);\n    }\n\n    const isLoading = loading ? <Spinner /> : null;\n    const isError =  error ? <Error /> : null;\n    const isContent = !(loading || error || !comic)? <SinglePageLayout dataType={\"Comic\"} prevProps = {comic} /> : null;\n\n    return (\n        <div className=\"single-comic\">\n            {isLoading}\n            {isError}\n            {isContent}\n        </div>\n    )\n}\n\nexport default SingleComicPage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\n\nimport Error from '../Error/Error'\nimport Spinner from '../Spinner/Spinner'\nimport useMarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = (props) => {\n\n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter, cleanError} = useMarvelService();\n\n    useEffect(()=>{\n        showChac();\n    },[])\n\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n\n    }\n\n    const showChac = () => {\n        cleanError()\n        const id = Math.floor(Math.random() * (1010789 - 1009146) + 1009146)\n        getCharacter(id)\n        .then(res => {\n            onCharLoaded(res)\n        })\n    }\n\n    let isLoading = loading ? <Spinner></Spinner> : null;\n    let isError = error ? <Error></Error> : null;\n    let isChar = !(loading || error) ? <View char = {char}></View> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {isLoading}\n            {isError}\n            {isChar}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={showChac} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n    \n}\n\nconst View = ({char:{name, description, thumbnail, urls, wiki}}) => {\n\n    let styleImg = {objectFit: \"cover\"}; \n    if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        styleImg = {objectFit: \"contain\"}\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} style = {styleImg} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={urls} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div> \n        </div>\n       \n    )\n}\n\nexport default RandomChar;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { Formik } from 'formik';\n\nimport Spinner from '../Spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [chars, setChars] = useState([]);\n    const [offset, setOffset] = useState(0);\n    const [isEnded, setIsEnded] = useState(false);\n    const [firstLoad, setFirstLoad] = useState(true);\n\n    const itemRefs = [];\n\n    const {loading, error, getAllCharacters, cleanError} = useMarvelService();\n\n    const duration = 300;\n\n    const defaultStyle = {\n      transition: `opacity ${duration}ms ease-in-out`,\n      opacity: 0,\n    }\n    \n    const transitionStyles = {\n      entering: { opacity: 1 },\n      entered:  { opacity: 1 },\n      exiting:  { opacity: .9 },\n      exited:  { opacity: .9 },\n    };\n\n    const onFocus = (index) => {\n        if(itemRefs){\n            itemRefs.forEach((item,i) => {\n                if(item.classList.contains(\"char__item_selected\")){\n                    item.classList.remove(\"char__item_selected\");\n                }\n                if(i === index){\n                    item.classList.add(\"char__item_selected\"); \n                }\n            })\n        }\n    }\n\n    useEffect(()=>{\n        onRequest();\n    },[])\n\n    // const updateCharOnScroll = (offset) => {\n    //     if(!scrollLoading && (document.documentElement.scrollTop + document.documentElement.clientHeight === document.documentElement.scrollHeight)){\n    //         onRequest(offset)\n    //     }\n    // }\n\n    const onRequest = () => {   \n        cleanError();     \n        getAllCharacters(offset)\n        .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (newChars) => {\n        let ended = false;\n        if(newChars < 9){ended = true;}\n\n        setChars(chars => chars = [...chars, ...newChars]);\n        setOffset(offset => offset + 9);\n        setIsEnded(ended);\n    }\n\n\n    const renderItems = () => {\n        const items = chars.map((char,i) => {\n\n            let styleImg = {objectFit: \"cover\"};\n\n            if(char.thumbnail.indexOf(\"image_not_available.jpg\") > -1){\n                styleImg = {objectFit: \"unset\"}\n            }\n\n            return(\n                <Transition timeout={300} in = {!(loading || error)}>\n                    {state => (\n                        <li\n                        style={{\n                            ...defaultStyle,\n                            ...transitionStyles[state]  \n                        }}\n                        ref = {el => itemRefs[i] = el}\n                        tabIndex = {0}\n                        key = {char.id}\n                        char = {char}\n                        onClick={() => {props.selectId(char.id); onFocus(i)}} \n                        className=\"char__item\"\n                        onKeyDown={(e) => {\n                            if (e.key === ' ' || e.key === \"Enter\") {\n                                props.selectId(char.id);\n                                onFocus(i);\n                            }\n                        }}>\n                            <img style={styleImg} src={char.thumbnail} alt=\"abyss\"/>\n                            <div className=\"char__name\">{char.name}</div>\n                        </li>\n                    )}\n                </Transition>\n            ) \n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const isContent = !(loading && error) ? renderItems() : null;\n    const isLoading = (loading && firstLoad) ? <Spinner /> : null;\n    return (\n        <div className=\"char__list\">\n\n            {isLoading}\n            {isContent}\n\n            <button style = {{display: isEnded ? \"none\" : \"block\"}}\n            disabled = {loading} \n            onClick = {()=>{onRequest(offset); setFirstLoad(false)}}\n            className=\"button button__main button__long\">\n\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    selectId: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useEffect, useState, useRef } from 'react';\n\nimport useMarvelService from '../../services/MarvelService'\nimport Error from '../Error/Error'\nimport Spinner from '../Spinner/Spinner'\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(localStorage.getItem(\"charInfo\")?  JSON.parse(localStorage.getItem(\"charInfo\")): null)\n\n    const {error, loading, getCharacter, cleanError} = useMarvelService();\n\n    const prevProps = useRef(props.selectedId)\n\n    useEffect(()=>{\n            if(props.selectedId !== prevProps.selectedId){\n                updateChar(props.selectedId)\n        }\n    },[props.selectedId])\n\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n        localStorage.setItem(\"charInfo\", JSON.stringify(char))\n    }\n\n\n    const updateChar = (id) => {\n        if(id){\n            cleanError();\n            document.documentElement.scrollTop = 400;\n            getCharacter(id)\n            .then(res => {onCharLoaded(res)})\n        }\n\n    }\n\n\n    const isSkeleton = (loading || char || error) ? null : <Skeleton />\n    const isLoading = loading ? <Spinner></Spinner> : null;\n    const isError = error ? <Error /> : null;\n    const isContent = !(loading || error || !char) ? <View char = {char}></View> : null;\n\n    return (\n        <div className=\"char__info\">\n            {isSkeleton}\n            {isLoading}\n            {isError}\n            {isContent}\n        </div>\n    )\n\n}\n\nconst View = ({char: {name, thumbnail, wiki, description, urls, comics}}) => {\n\n    let comicsView = \"There is no comics for this character\";\n    if(comics.length !== 0) {\n        comicsView = comics.map((item, i)=>{\n            if(i<10){\n                return (\n                    <li key = {i} className=\"char__comics-item\">\n                        {item.name}\n                    </li>\n                )\n            }\n        })\n    }\n\n    let styleImg = {objectFit: \"cover\"};\n\n    if(thumbnail.indexOf(\"image_not_available.jpg\") > -1){\n        styleImg = {objectFit: \"contain\"}\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img style = {styleImg} src={thumbnail} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={urls} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comicsView}\n            </ul>        \n        </>\n\n    )\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Formik } from 'formik';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport useMarvelService from \"../../services/MarvelService\"\r\nimport \"./findCharacter.scss\"\r\n\r\nconst SearchForm = () => {\r\n    const {getCharacterByName, loading} = useMarvelService();\r\n    const [character, setCharacter] = useState(null);\r\n    const [searched, setSearched] = useState(false);\r\n     \r\n    return (\r\n        <Formik\r\n                initialValues={{character: \"\"}}\r\n                validate = {\r\n                    values => {\r\n                        const errors = {}\r\n                        if(!values.character){\r\n                            errors.character = \"This field is required\";\r\n                        }\r\n                        if(values.character.length === 1){\r\n                            errors.character = \"Character name too short\"\r\n                        }\r\n                        return errors\r\n                    }\r\n                }\r\n                onSubmit = {(values)=> {\r\n                   setSearched(true); \r\n                    getCharacterByName(values.character)\r\n                    .then(setCharacter)\r\n                    .catch(setCharacter)\r\n                }\r\n                }\r\n            >\r\n                {({values, errors, handleBlur, handleSubmit, handleChange}) => {\r\n\r\n                    const isError = errors.character ?  <div className=\"error\">{errors.character}</div> : null;\r\n                    const isContent = character ?\r\n                            <div className=\"success\">\r\n                                There is! Visit {character.name} page?\r\n                                <Link to = {\"/characters/\" + character.name} className=\"button button__secondary\">\r\n                                    <div className=\"inner\">TO PAGE</div>\r\n                                </Link>\r\n                            </div> : <div className=\"error\">The character was not found. Check the name and try again</div>\r\n\r\n                        return (\r\n                            <section className=\"form\">\r\n                                <form onSubmit={handleSubmit} action=\"#\" className=\"form__character\">\r\n                                    <div className=\"form__title\">Or find a character by name:</div>\r\n                                    <div className=\"form__wrapper\">\r\n                                        <input\r\n                                            onBlur={handleBlur} \r\n                                            onChange={(e) => {handleChange(e); setSearched(false)}} \r\n                                            placeholder=\"Enter name\" \r\n                                            name = \"character\" \r\n                                            type=\"text\" \r\n                                            className=\"form__search\"\r\n                                            value = {values.character} />\r\n                                        <button disabled = {loading} className=\"button button__main form_search\">\r\n                                        <div className=\"inner\">FIND</div>\r\n                                        </button>\r\n                                    </div>      \r\n                                    {(searched && !loading) ? isContent : isError}                    \r\n                                </form>\r\n                            </section>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SearchForm","import {useState} from \"react\"\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport decoration from '../../resources/img/vision.png';\r\nimport SearchForm from \"../findCharacter/findCharacter\"\r\n\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\"\r\n\r\nconst MainPage = () => {\r\n    console.log(\"mount\")\r\n    const [selectedId, setSelectedId] = useState();\r\n\r\n    function onSelectId(id){\r\n        setSelectedId(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>                        \r\n            </ErrorBoundary>\r\n\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList selectId = {onSelectId}/>\r\n                </ErrorBoundary>\r\n                <div>\r\n                    <ErrorBoundary>\r\n                        <CharInfo selectedId = {selectedId}/>\r\n                    </ErrorBoundary>\r\n                    <SearchForm />\r\n                </div>\r\n\r\n            </div> \r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport Spinner from \"../Spinner/Spinner\"\nimport Error from \"../Error/Error\"\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const {loading, error, cleanError, getAllComics} = useMarvelService();\n    const [offset, setOffset] = useState(400);\n    const [comics, setComic] = useState([]);\n    const [firstLoad, setFirstLoad] = useState(true)\n\n\n    \n    const duration = 300;\n\n    const defaultStyle = {\n      transition: `opacity ${duration}ms ease-in-out`,\n      opacity: 0,\n    }\n    \n    const transitionStyles = {\n      entering: { opacity: 1 },\n      entered:  { opacity: 1 },\n      exiting:  { opacity: .8 },\n      exited:  { opacity: .8 },\n    };\n\n    useEffect(()=>{\n        console.log(comics)\n        if(comics.length === 0)\n            onComicsLoading();\n    },[]);\n\n    function onComicsLoading(){\n        cleanError();\n        getAllComics(offset)\n        .then(onComicsLoaded);\n    }\n\n    function onComicsLoaded(com) {\n        setComic([...comics, ...com]);\n        setOffset(offset + 9);\n\n    }\n\n    function renderComics(comics){\n        const items = comics.map((comic,i)=>{\n            return (\n                <Transition timeout={300} in = {!(loading || error)}>\n                    {state => (\n                        <li style ={{\n                            ...defaultStyle,\n                            ...transitionStyles[state]\n                        }} key = {i} className=\"comics__item\">\n                            <Link to = {\"\" + comic.id}>\n                                <img src={comic.thumbnail} alt={comic.title} className=\"comics__item-img\"/>\n                                <div className=\"comics__item-name\">{comic.title}</div>\n                                <div className=\"comics__item-price\">{comic.price}</div>\n                            </Link>\n                        </li>\n                    )}\n                </Transition>\n\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderComics(comics);\n    const isLoading = (loading && firstLoad) ? <Spinner /> : null;\n    const isError =  error ? <Error /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {isLoading}\n            {isError}\n            {items}\n            <button \n            disabled = {loading} \n            onClick={() => {onComicsLoading();setFirstLoad(false);}} \n            className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","\r\nimport ComicsList from \"../comicsList/ComicsList\"\r\nimport AppBanner from \"../appBanner/AppBanner\"\r\n\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\"\r\n\r\nconst ComicsPage = () =>{\r\n    return (\r\n        <>\r\n            <AppBanner></AppBanner>\r\n            <ErrorBoundary>\r\n                <ComicsList></ComicsList>\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage","import { NavLink } from \"react-router-dom\"\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <NavLink to = \"/\">\n                    <span>Marvel</span> information portal\n                </NavLink>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink\n                    style= {({isActive}) => isActive?{color: \"#9F0013\"}:null}\n                    to = \"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink\n                    style= {({isActive}) => isActive?{color: \"#9F0013\"}:null}\n                    to = \"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import { useParams, Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Error from '../Error/Error';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport {SinglePageLayout} from './SinglePageLayout'\r\nimport './singleComic.scss';\r\n\r\nconst SingleCharacterPage = () => {\r\n\r\n    const {charName} = useParams();\r\n    const {getCharacterByName, loading, error, cleanError} = useMarvelService();\r\n    const [char, setChar] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        onCharLoading();\r\n    }, [])\r\n\r\n    const onCharLoading = () => {\r\n        cleanError();\r\n        getCharacterByName(charName)\r\n        .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (res) => {\r\n        setChar(res);\r\n    }\r\n\r\n    const isLoading = loading ? <Spinner /> : null;\r\n    const isError =  error ? <Error /> : null;\r\n    const isContent = !(loading || error || !char)? <SinglePageLayout dataType={\"Character\"} prevProps = {char} /> : null;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            {isLoading}\r\n            {isError}\r\n            {isContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleCharacterPage;","import { Link } from \"react-router-dom\";\r\nimport Error from \"../Error/Error\";\r\n\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <>\r\n            <Error />\r\n            <Link to = \"/\" className=\"single-comic__back\">Back to main page</Link>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Page404;","import { Component, lazy, Suspense } from \"react\";\nimport {BrowserRouter,  Routes, Route} from \"react-router-dom\"\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport Spinner from \"../Spinner/Spinner\";\nimport SingleCharacterPage from \"../pages/SingleCharacterPage\";\nimport {Page404} from \"../pages/index\"\n\nimport \"./app.css\"\n\nconst MainPage = lazy(()=>import(\"../pages/MainPage\"))\nconst ComicsPage = lazy(()=>import(\"../pages/ComicsPage\"))\nconst SingleComicPage = lazy(()=>import(\"../pages/SingleComicPage\"))\n\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"app\">\n                <AppHeader />\n                <div className=\"main\">\n                    <Suspense fallback = {<Spinner />}>\n                        <SwitchTransition>\n                            <CSSTransition\n                                timeout={300}\n                                classNames=\"page\"\n                                unmountOnExit>\n                                {(state) => (\n                                    <main className=\"page\">\n                                        <Routes>\n                                            <Route path = \"/\" element = {<MainPage />}/>\n                                            <Route path = \"/comics\" element = {<ComicsPage />}/>\n                                            <Route path = \"/comics/:comicId\" element = {<SingleComicPage />}/>\n                                            <Route path = \"/characters/:charName\"  element = {<SingleCharacterPage />}/>\n                                            <Route path = \"*\" element = {<Page404 />}/>\n                                        </Routes>\n                                    </main>\n                                )}\n                            </CSSTransition>\n                        </SwitchTransition>\n\n                    </Suspense>\n\n                </div>\n            </div>\n        </BrowserRouter>\n    )\n\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n    <App />\n)"],"sourceRoot":""}